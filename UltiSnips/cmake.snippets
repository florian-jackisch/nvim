snippet cxxstandard "Set C++ version"
set_target_properties(${1:project} PROPERTIES
    CXX_STANDARD ${2:14}
    CXX_STANDARD_REQUIRED YES
    CXX_EXTENSIONS NO
)$3
endsnippet

snippet download "Download dependency"
# 'cmake/${1:dependency}-download.cmake'
# This file downloads $1 at configure time and adds it as a cmake
# subdirectory.

# Copy the `$1-download.cmake.in` file (containing the
# download instruction)
configure_file(
    cmake/$1-download.cmake.in
    $1-download/CMakeLists.txt
)

# Source the CMakeLists.txt file with the download instruction
execute_process(
    COMMAND "${CMAKE_COMMAND}" -G "${CMAKE_GENERATOR}" .
    WORKING_DIRECTORY "${CMAKE_BINARY_DIR}/$1-download"
)
# Download
execute_process(
    COMMAND "${CMAKE_COMMAND}" --build .
    WORKING_DIRECTORY "${CMAKE_BINARY_DIR}/$1-download"
)

# Add the cmake project
add_subdirectory("${CMAKE_BINARY_DIR}/$1-src")$2
endsnippet

snippet download.in "Download dependency (.in file)"
# 'cmake/${1:dependency}-download.cmake.in'
# This file is copied to add the download target

cmake_minimum_required(VERSION 2.8.2)

project($1-download NONE)

include(ExternalProject)
ExternalProject_Add($1
    GIT_REPOSITORY ${2:https://github.com/google/googletest.git}
    GIT_TAG master
    SOURCE_DIR "${CMAKE_BINARY_DIR}/$1-src"
    # No configuration, building, or installation - just download
    CONFIGURE_COMMAND ""
    BUILD_COMMAND ""
    INSTALL_COMMAND ""
    TEST_COMMAND ""
)$3
endsnippet
